{
  "_args": [
    [
      {
        "raw": "jstransformer@0.0.2",
        "scope": null,
        "escapedName": "jstransformer",
        "name": "jstransformer",
        "rawSpec": "0.0.2",
        "spec": "0.0.2",
        "type": "version"
      },
      "/Users/gustavo/Desktop/MODULOR/express-socketio-tutorial/node_modules/jade"
    ]
  ],
  "_from": "jstransformer@0.0.2",
  "_id": "jstransformer@0.0.2",
  "_inCache": true,
  "_location": "/jstransformer",
  "_nodeVersion": "1.6.2",
  "_npmUser": {
    "name": "forbeslindesay",
    "email": "forbes@lindesay.co.uk"
  },
  "_npmVersion": "2.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jstransformer@0.0.2",
    "scope": null,
    "escapedName": "jstransformer",
    "name": "jstransformer",
    "rawSpec": "0.0.2",
    "spec": "0.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/jade"
  ],
  "_resolved": "https://registry.npmjs.org/jstransformer/-/jstransformer-0.0.2.tgz",
  "_shasum": "7aae29a903d196cfa0973d885d3e47947ecd76ab",
  "_shrinkwrap": null,
  "_spec": "jstransformer@0.0.2",
  "_where": "/Users/gustavo/Desktop/MODULOR/express-socketio-tutorial/node_modules/jade",
  "author": {
    "name": "ForbesLindesay"
  },
  "bugs": {
    "url": "https://github.com/jstransformers/jstransformer/issues"
  },
  "dependencies": {
    "is-promise": "^2.0.0",
    "promise": "^6.0.1"
  },
  "description": "Normalize the API of any jstransformer",
  "devDependencies": {
    "coveralls": "^2.11.2",
    "istanbul": "^0.3.5",
    "testit": "^1.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7aae29a903d196cfa0973d885d3e47947ecd76ab",
    "tarball": "https://registry.npmjs.org/jstransformer/-/jstransformer-0.0.2.tgz"
  },
  "files": [
    "index.js",
    "LICENSE"
  ],
  "gitHead": "99b40c1aa9fa984585aa50f4618d97a0287495c1",
  "homepage": "https://github.com/jstransformers/jstransformer#readme",
  "keywords": [
    "jstransformer"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "forbeslindesay",
      "email": "forbes@lindesay.co.uk"
    }
  ],
  "name": "jstransformer",
  "optionalDependencies": {},
  "readme": "<p align=\"center\"><img src=\"https://cdn.rawgit.com/jstransformers/jstransformer/2bb6dc6c410e8683a17a4af5f1b73bcbee95aada/logo.svg\" width=\"300px\" height=\"299px\" /></p>\n<h1 align=\"center\">JSTransformer</h1>\n<p align=\"center\">Normalize the API of any jstransformer</p>\n\n<p align=\"center\"><a href=\"https://travis-ci.org/jstransformers/jstransformer\"><img src=\"https://img.shields.io/travis/jstransformers/jstransformer/master.svg\" alt=\"Build Status\"></a>\n<a href=\"https://gemnasium.com/jstransformers/jstransformer\"><img src=\"https://img.shields.io/gemnasium/jstransformers/jstransformer.svg\" alt=\"Dependency Status\"></a>\n<a href=\"https://coveralls.io/r/jstransformers/jstransformer?branch=master\"><img src=\"https://img.shields.io/coveralls/jstransformers/jstransformer/master.svg\" alt=\"Coverage Status\"></a>\n<a href=\"https://www.npmjs.org/package/jstransformer\"><img src=\"https://img.shields.io/npm/v/jstransformer.svg\" alt=\"NPM version\"></a></p>\n\n## Installation\n\n    npm install jstransformer\n\n## Usage\n\n```js\nvar transformer = require('jstransformer');\nvar marked = transformer(require('jstransformer-marked'));\n\nvar options = {};\nvar res = marked.render('Some **markdown**', options);\n// => {body: 'Some <strong>markdown</strong>', dependencies: []}\n```\n\nThis gives the same API regardless of the jstransformer passed in.\n\n## API\n\nA transformer, once normalised using this module, will implement the following methods.  Note that if the underlying transformer cannot be used to implement the functionality, it may ultimately just throw an error.\n\n### Returned object from `.render*`\n\n```js\n{body: String, dependencies: Array.<String>}\n```\n\n - `body` represents the result as a string\n - `dependencies` is an array of files that were read in as part of the render process (or an empty array if there were no dependencies)\n\n### `.render`\n\n```js\ntransformer.render(str, options, locals);\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.render` or `.compile`_\n\nTransform a string and return an object.\n\n### `.renderAsync`\n\n```js\ntransformer.renderAsync(str[, options], locals, callback);\n```\n\n```js\ntransformer.renderAsync(str[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderAsync` or `.render`_\n\nTransform a string asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.renderFile`\n\n```js\ntransformer.renderFile(filename, options, locals)\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.renderFile`, `.render`, `.compileFile`, or `.compile`_\n\nTransform a file and return an object.\n\n### `.renderFileAsync`\n\n```js\ntransformer.renderFileAsync(filename[, options], locals, callback);\n```\n\n```js\ntransformer.renderFileAsync(filename[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderFileAsync`, `.renderFile`, `.renderAsync`, `.render`, `.compileFileAsync`, `.compileFile`, `.compileAsync`, or `.compileFile`_\n\nTransform a file asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.inputFormats`\n\n```js\nvar formats = transformer.inputFormats;\n=> ['md', 'markdown']\n```\n\nReturns an array of strings representing potential input formats for the transform. If not provided directly by the transform, results in an array containing the name of the transform.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jstransformers/jstransformer.git"
  },
  "scripts": {
    "coverage": "istanbul cover test",
    "coveralls": "npm run coverage && cat ./coverage/lcov.info | coveralls",
    "test": "node test"
  },
  "version": "0.0.2"
}
